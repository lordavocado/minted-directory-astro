---
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";
import formatString from "../../util/formatString";
import UiTagGrid from "../ui/tags/Grid.vue";
import UiTagSelect from "../ui/tags/Select.vue";
import config from "@util/themeConfig";

const searchPlaceholder = await getSearchPlaceholder();

async function getSearchPlaceholder() {
  if (
    config.directoryData.search?.placeholder &&
    config.directoryData.search.placeholder.includes("{0}")
  ) {
    const count = (await getCollection("directory")).length;
    return formatString(
      config.directoryData.search?.placeholder ?? "Search among {0} listings",
      count,
    );
  }

  return config.directoryData.search?.placeholder ?? "Search";
}
---

<div class="mb-12 not-prose">
  <div class="relative">
    <div class="relative flex items-center">
      {
        config.directoryUI.search.icon ? (
          <div class="absolute inset-y-0 left-0 flex items-center pl-4">
            <Icon
              name={config.directoryUI.search.icon}
              class="h-5 w-5 text-gray-400"
              aria-hidden="true"
            />
          </div>
        ) : (
          ""
        )
      }
      <input
        id="search"
        class={`block w-full rounded-xl border-0 py-4 text-gray-900 ring-1 ring-inset ring-gray-200 placeholder:text-gray-500 focus:ring-2 focus:ring-inset focus:ring-primary-500 sm:text-base transition-all duration-200 bg-white shadow-sm hover:shadow-md ${config.directoryUI.search?.icon ? 'pl-12 pr-20' : 'px-4 pr-20'}`}
        placeholder={searchPlaceholder}
      />
      <div class="absolute inset-y-0 right-0 flex items-center pr-4">
        <kbd
          class="inline-flex items-center rounded-lg border border-gray-200 bg-gray-50 px-2 py-1 font-mono text-xs text-gray-500"
          >âŒ˜K</kbd
        >
      </div>
    </div>
  </div>
  {
    () => {
      const sidebar = config.layout.sidebar;
      if (sidebar) {
        return <></>
      }
      if (config.directoryUI.search.tags.display === "select") {
        return (
          <div class="mt-6">
            <UiTagSelect client:load>
              <Icon name="tabler:x" />
            </UiTagSelect>
          </div>
        );
      }
      if (config.directoryUI.search.tags.display === "show-all") {
        return (
          <div class="mt-6">
            <UiTagGrid client:load />
          </div>
        );
      }
    }
  }
</div>

<script>
  import { search } from "../../store.js";

  const searchInput = document.getElementById("search");

  // Add an event listener to the button
  searchInput?.addEventListener("input", (event: Event) => {
    const target = event.target as HTMLSelectElement;
    search.set(target.value);
  });

  const keyListener = function (e: KeyboardEvent) {
    if (e.key === "k" && (e.ctrlKey || e.metaKey)) {
      e.preventDefault();
      searchInput?.focus();
    }

    if (e.key === "Escape") {
      e.preventDefault();
      searchInput?.blur();
    }
  };

  document.body.addEventListener("keydown", keyListener);
</script>